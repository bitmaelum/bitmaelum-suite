name: Create release and packages
on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  goreleaser:
    runs-on: ubuntu-20.04
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15.x
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Configure GPG Key
      run: |
        mkdir -p ~/.gnupg/
        chmod 700 ~/.gnupg/
        printf "$GPG_SIGNING_KEY" | base64 --decode > ~/.gnupg/private.key
        gpg --import --no-tty --batch --yes ~/.gnupg/private.key
      env:
        GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY }}
    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v2
      with:
        version: latest
        args: release --rm-dist --release-notes=CHANGELOG.md
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SCOOP_BUCKET_GITHUB_TOKEN: ${{ secrets.SCOOP_BUCKET_GITHUB_TOKEN }}
        HOMEBREW_TAP_GITHUB_TOKEN: ${{ secrets.SCOOP_BUCKET_GITHUB_TOKEN }}

  windows-msi:
    needs: goreleaser
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download zipped binaries
        id: download_binaries
        shell: bash
        run: |
          hub release download "${GITHUB_REF#refs/tags/}" -i '*windows_64bit*.zip'
          printf "::set-output name=zip::%s\n" *.zip
          unzip -o *.zip && rm -v *.zip
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - name: Install go-msi
        run: choco install -y "go-msi"
      - name: Prepare PATH
        shell: bash
        run: |
          echo "$WIX\\bin" >> $GITHUB_PATH
          echo "C:\\Program Files\\go-msi" >> $GITHUB_PATH
      - name: Build MSI
        id: buildmsi
        shell: bash
        run: |
          mkdir -p build

          # Convert license to rtf
          go-msi to-rtf --src LICENSE --out LICENSE.rtf

          msi="$(basename "${{ steps.download_binaries.outputs.zip }}" ".zip").msi"
          printf "::set-output name=msi::%s\n" "$msi"
          go-msi make --msi "$PWD/$msi" --out "$PWD/build" --version "${GITHUB_REF#refs/tags/}" --arch x64
      - name: Decode cert
        shell: bash
        run: |
          echo "${{ secrets.MSI_CODESIGN_CERT }}" | base64 -d > codesign.cert
      - name: Sign MSI
        run: |
          .\buildscripts\signtool.exe sign /f codesign.cert /d "BitMaelum Suite" /p ${{ secrets.MSI_CODESIGN_PASS }} /v /fd sha256 /sha1 ${{ secrets.MSI_CODESIGN_FINGERPRINT }} /t "http://timestamp.comodoca.com/authenticode" ${{ steps.buildmsi.outputs.msi }}
      - name: Upload MSI
        shell: bash
        run: hub release edit "${GITHUB_REF#refs/tags/}" -m "" --draft=false -a "${{ steps.buildmsi.outputs.msi }}"
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
